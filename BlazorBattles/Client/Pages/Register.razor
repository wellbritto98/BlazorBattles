@page "/register"
@using BlazorBattles.Client.Services
@inject IUnitService UnitService
@inject IJSRuntime JsRuntime
@inject NavigationManager NavigationManager


<h3>Register</h3>
<style>
    .required::after {
        content: "*";
        color: red;
    }
</style>
<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <div class="form-group pt-3 w-50">
        <label for="email" class="required">
            Email
        </label>
        <InputText id="email" @bind-Value="user.Email" class="form-control">
        </InputText>
        <ValidationMessage For="@(() => user.Email)"/>
    </div>
    <div class="form-group pt-3 w-50">
        <label for="password" class="required">
            Password
        </label>
        <InputText id="password" @bind-Value="user.UserPassword" class="form-control" type="password">
        </InputText>
        <ValidationMessage For="@(() => user.UserPassword)"/>
    </div>
    <div class="form-group pt-3 w-50">
        <label for="confirmPassword">
            Confirm Password
        </label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password">
        </InputText>
        <ValidationMessage For="@(() => user.ConfirmPassword)"/>

    </div>

    <div class="form-group pt-3 w-50">
        <label for="bio"> Biography </label>
        <InputTextArea id="bio" @bind-Value="user.Bio" class="form-control">
        </InputTextArea>
        <ValidationMessage For="@(() => user.Bio)"/>
    </div>

    <div class="form-group pt-3 w-50">
        <label for="startUnit"> Start Unit </label>
        <InputSelect id="startUnit" @bind-Value="user.StartUnitId" TValue="int" class="form-control">
            @foreach (var unit in UnitService.Units)
            {
                <option value="@unit.Id"> @unit.Title</option>
            }
        </InputSelect>

    </div>

    <div class="form-group pt-3 w-50">
        <label for="bananas"> Bananas </label>
        <InputNumber id="bananas" @bind-Value="user.Bananas" class="form-control">
        </InputNumber>
        <ValidationMessage For="@(() => user.Bananas)"/>
    </div>

    <div class="form-group pt-3 w-50">
        <label for="dateOfBirth"> Date of Birth </label>
        <InputDate id="dateOfBirth" @bind-Value="user.DateOfBirth" class="form-control">
        </InputDate>
        <ValidationMessage For="@(() => user.DateOfBirth)"/>
    </div>

    <div class="form-group pt-3 w-50">

        <InputCheckbox id="isConfirmed" @bind-Value="user.IsConfirmed" class="form-check-input">
        </InputCheckbox>
        <label for="isConfirmed" class="form-check-label"> Is Confirmed </label>
        <ValidationMessage For="@(() => user.IsConfirmed)"/>
    </div>

    <button class="btn btn-primary mt-3" type="submit">Register</button>

</EditForm>


@code {
    UserRegister user = new UserRegister();

    void HandleRegistration()
    {
        NavigationManager.NavigateTo("login");
        JsRuntime.InvokeVoidAsync("console.log", user);
    }

}